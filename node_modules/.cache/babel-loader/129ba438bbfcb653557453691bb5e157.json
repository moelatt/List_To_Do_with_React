{"ast":null,"code":"var _jsxFileName = \"/Users/mlatt/Desktop/Folders/javaScript+HTML+React/React/ToDoList_React/todolist_with_react/src/components/ToDoItems.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nexport class ToDoItems extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        color: '#FF3374',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        backgroundColor: '#f4f4f4',\n        textDecoration: this.props.passTodolist.completed ? 'none' : 'line-through',\n        textDecorationColor: 'black'\n      };\n    };\n\n    this.buttoneStyle = () => {\n      return {\n        background: \"#ff0000\",\n        color: '#fff',\n        border: 'none',\n        padding: '13px 22px',\n        borderRadius: '35%',\n        cursor: 'pointer',\n        float: 'right'\n      };\n    };\n  }\n\n  render() {\n    // Destructuring \n    const _this$props$passTodol = this.props.passTodolist,\n          id = _this$props$passTodol.id,\n          title = _this$props$passTodol.title;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.passMarkComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), title, React.createElement(\"button\", {\n      style: this.buttoneStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"delete\")));\n  }\n\n} // PropTypes\n\nToDoItems.propTypes = {\n  passTodolist: PropTypes.object.isRequired // const itemStyle = {\n  //     color: 'red'\n  // }\n\n};\nexport default ToDoItems;","map":{"version":3,"sources":["/Users/mlatt/Desktop/Folders/javaScript+HTML+React/React/ToDoList_React/todolist_with_react/src/components/ToDoItems.jsx"],"names":["React","Component","PropTypes","ToDoItems","getStyle","color","padding","borderBottom","backgroundColor","textDecoration","props","passTodolist","completed","textDecorationColor","buttoneStyle","background","border","borderRadius","cursor","float","render","id","title","passMarkComplete","bind","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SACrCG,QADqC,GAC1B,MAAK;AACZ,aAAO;AACHC,QAAAA,KAAK,EAAE,SADJ;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,eAAe,EAAE,SAJd;AAKHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,SAAxB,GAAoC,MAApC,GAA4C,cALzD;AAMHC,QAAAA,mBAAmB,EAAG;AANnB,OAAP;AAQH,KAVoC;;AAAA,SAWrCC,YAXqC,GAWtB,MAAK;AAChB,aAAM;AACFC,QAAAA,UAAU,EAAE,SADV;AAEFV,QAAAA,KAAK,EAAE,MAFL;AAGFW,QAAAA,MAAM,EAAE,MAHN;AAIFV,QAAAA,OAAO,EAAE,WAJP;AAKFW,QAAAA,YAAY,EAAE,KALZ;AAMFC,QAAAA,MAAM,EAAE,SANN;AAOFC,QAAAA,KAAK,EAAE;AAPL,OAAN;AASH,KArBoC;AAAA;;AAsBrCC,EAAAA,MAAM,GAAG;AACL;AADK,kCAEgB,KAAKV,KAAL,CAAWC,YAF3B;AAAA,UAEEU,EAFF,yBAEEA,EAFF;AAAA,UAEMC,KAFN,yBAEMA,KAFN;AAGL,WACI;AAAK,MAAA,KAAK,EAAK,KAAKlB,QAAL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAG,UAAd;AAAyB,MAAA,QAAQ,EAAI,KAAKM,KAAL,CAAWa,gBAAX,CAA4BC,IAA5B,CAAiC,IAAjC,EAAuCH,EAAvC,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGMC,KAHN,EAII;AAAQ,MAAA,KAAK,EAAI,KAAKR,YAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CADJ;AAUH;;AAnCoC,C,CAqCzC;;AACAX,SAAS,CAACsB,SAAV,GAAqB;AACjBd,EAAAA,YAAY,EAAGT,SAAS,CAACwB,MAAV,CAAiBC,UADf,CAGrB;AACA;AACA;;AALqB,CAArB;AAMA,eAAexB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class ToDoItems extends Component {\n    getStyle = () =>{\n        return {\n            color: '#FF3374',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            backgroundColor: '#f4f4f4',\n            textDecoration: this.props.passTodolist.completed ? 'none': 'line-through',\n            textDecorationColor : 'black', \n        }\n    }\n    buttoneStyle = () =>{\n        return{\n            background: \"#ff0000\",\n            color: '#fff',\n            border: 'none',\n            padding: '13px 22px',\n            borderRadius: '35%',\n            cursor: 'pointer',\n            float: 'right'\n        }\n    }\n    render() {\n        // Destructuring \n        const {id, title}  = this.props.passTodolist;\n        return (\n            <div style = { this.getStyle() }>\n                <p>\n                    <input type = \"checkbox\" onChange = {this.props.passMarkComplete.bind(this, id)}>\n                    </input>\n                    { title } \n                    <button style = {this.buttoneStyle()}>delete</button>\n                </p>\n            </div>\n        )\n    }\n}\n// PropTypes\nToDoItems.propTypes ={\n    passTodolist : PropTypes.object.isRequired\n}\n// const itemStyle = {\n//     color: 'red'\n// }\nexport default ToDoItems;\n"]},"metadata":{},"sourceType":"module"}