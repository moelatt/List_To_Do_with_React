{"version":3,"sources":["components/pages/About.jsx","components/ToDoItems.jsx","components/todo.jsx","components/addToDo.jsx","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","style","textStyle","color","fontFamily","ToDoItems","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","padding","borderBottom","backgroundColor","textDecoration","props","passTodolist","completed","textDecorationColor","buttoneStyle","background","border","borderRadius","cursor","float","fontSize","inherits","createClass","key","value","_this$props$passTodol","id","title","itemStyle","type","onChange","passMarkComplete","bind","onClick","passDeleteTodolist","Component","Todo","console","log","todolist","map","todo","src_components_ToDoItems","markComplete","passDelete","AddToDo","state","onSubmit","e","preventDefault","passDataToAppJS","setState","defineProperty","target","name","display","flex","placeholder","className","Header","headerStyle","react_router_dom","to","textAlign","App","todos","uuid","v4","deleteButton","toConsumableArray","filter","passDataToAddToDo","newTodo","_this2","react_router","exact","path","render","Fragment","addToDo","components_todo","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75c51e3e.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function About() {\n    return (\n// if you don't want to use <div> you can use <react.fragment>\n        <div style = {textStyle}>\n            <h1>About</h1>\n            <p>This is the List-To-Do app v1.0.0. \n                It is part of studying React</p>\n        </div>\n    )\n}\nconst textStyle = {\n    color: \"white\",\n    fontFamily: \"cursive\"\n\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport './ToDoItems.css'\n\nexport class ToDoItems extends Component {\n    getStyle = () =>{\n        return {\n            color: '#FF3374',\n            padding: '5px',\n            borderBottom: '1px #ccc dotted',\n            backgroundColor: '#EAEDED',\n            textDecoration: this.props.passTodolist.completed ? 'line-through': 'none',\n            textDecorationColor : 'black',\n        }\n    }\n    buttoneStyle = () =>{\n        return{\n            background: \"#ff0000\",\n            color: '#fff',\n            border: 'none',\n            padding: '10px 15px',\n            borderRadius: '35%',\n            cursor: 'pointer',\n            float: 'right',\n            fontSize: '15px',\n        }\n    }\n    render() {\n        // Destructuring \n        const {id, title}  = this.props.passTodolist;\n        return (\n            <div style = { this.getStyle() }>\n                <p>\n                    <input style = {itemStyle} type = \"checkbox\" onChange = {this.props.passMarkComplete.bind(this, id)}>\n                    </input>\n                    { title } \n                    <button style = {this.buttoneStyle()} \n                    onClick = {this.props.passDeleteTodolist.bind(this, id)}>X\n                    </button>\n                </p>\n            </div>\n        )\n    }\n}\n// PropTypes\nToDoItems.propTypes ={\n    passTodolist : PropTypes.object.isRequired\n}\nconst itemStyle = {\n    padding: '20px'\n}\nexport default ToDoItems;\n","import React, { Component } from 'react';\nimport ToDoItems from './ToDoItems'\nimport PropTypes from 'prop-types';\nclass Todo extends Component {\n    \n    render() { \n        console.log(this.props.Todo)\n        return (\n            this.props.todolist.map((todo) => (\n                <ToDoItems key = {todo.id} passTodolist = {todo} passMarkComplete = {this.props.markComplete}\n                passDeleteTodolist= {this.props.passDelete}/>\n            ))\n            );\n    }\n}\n\nTodo.propTypes = {\n    todolist: PropTypes.array.isRequired\n}\n \nexport default Todo;","import React, { Component } from 'react'\n\nexport class AddToDo extends Component {\n    state = {\n        title : ''\n    }\n    onSubmit = (e) =>{\n        e.preventDefault();\n        this.props.passDataToAppJS(this.state.title);\n        this.setState({title: ''});\n    }\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n    render() {\n        return (\n            <form onSubmit = {this.onSubmit} style = {{display: 'flex'}}>\n                <input type = 'text' \n                       name = 'title' \n                       style = {{flex : '10', padding: '5px'}}\n                       placeholder = \"Add List to do for future plan...\"\n                       value = {this.state.title}\n                       onChange = {this.onChange}>\n                </input>\n                <input type = 'submit' \n                       value = 'Submit' \n                       className = 'btn'\n                       style = {{flex:'1'}}>\n                       \n                </input>\n\n            </form>\n        )\n    }\n}\n\nexport default AddToDo;\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default function Header() {\n    return (\n        <div>\n            <header style = {headerStyle} >\n                <h1>List-To-Do</h1>\n                <Link style = {headerStyle} to = '/' >Home</Link> |\n                <Link style = {headerStyle} to = '/about'>About</Link>\n            </header>\n        </div>\n    )\n}\nconst headerStyle = {\n    background : '#212F3C',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '5px',\n    border: 'none',\n    fontSize: '20px',\n    fontFamily: 'cursive'\n    \n}\n// export default Header;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport About from './components/pages/About'\nimport Todo from './components/todo';\nimport AddToDo from './components/addToDo'\nimport Header from './components/layout/Header'\nimport uuid from 'uuid';\nimport './App.css';\nclass App extends Component {\n  state = { \n    todos: [{\n        id: uuid.v4(),\n        title: 'Eat breakfast',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Eat lunch',\n        completed: false       \n      },\n      {\n        id: uuid.v4(),\n        title: 'Eat dinner',\n        completed: false        \n      }\n    ]\n   }\n   // Toggle Complete\n   markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todolist => {\n      if(todolist.id === id){\n        todolist.completed = !todolist.completed\n      }\n      return (todolist)\n    })})\n}\ndeleteButton = (id) => {\n  console.log('delete the specific todo list item', id)\n  this.setState({todos: [...this.state.todos.filter(todolist => todolist.id !== id)]});\n}\n// Add to do\npassDataToAddToDo = (title) => {\n  const newTodo = {\n    id : uuid.v4(),\n    title: title,\n    completed: false\n  }\n  this.setState({todos: [...this.state.todos, newTodo]})\n}\n  render() { \n    console.log(this.state.todos)\n    return ( \n      <Router>\n         <div className = \"container\">\n          <Header/>\n          <Route exact path=\"/\" render = {props => (\n            <React.Fragment>\n              <AddToDo passDataToAppJS = {this.passDataToAddToDo}></AddToDo>\n              <Todo todolist = {this.state.todos} markComplete = {this.markComplete} passDelete = {this.deleteButton}></Todo>\n            </React.Fragment>)}>\n          </Route>\n          <Route path = \"/about\" component = {About}/>\n        </div>\n      </Router>\n     );\n  }\n}\n \nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}